/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/behaviors.h>

// Encoder configuration and Nice!View display support
/ {
    encoder0: encoder_0 {
        compatible = "zmk,encoder";
        label = "Encoder 0";
        // Update gpios to match your hardware
        a-gpios = <&gpio0 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
        b-gpios = <&gpio0 3 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
        // Optionally set resolution, steps, etc.
    };

    // Nice!View display for left half
    nice_view_left: nice_view_left {
        compatible = "zmk,nice-view";
        label = "Nice!View Left";
        i2c-bus = <&i2c1>;
        width = <128>;
        height = <32>;
        rotation = <0>;
        status = "okay";
        // Example: show a smiley face and layer name
        pages = <&nice_view_page_logo &nice_view_page_layer &nice_view_page_battery>;
    };

    // Nice!View display for right half
    nice_view_right: nice_view_right {
        compatible = "zmk,nice-view";
        label = "Nice!View Right";
        i2c-bus = <&i2c1>;
        width = <128>;
        height = <32>;
        rotation = <0>;
        status = "okay";
        // Example: show a fun message and WPM
        pages = <&nice_view_page_message &nice_view_page_wpm &nice_view_page_battery>;
    };

    // Example custom page: fun message
    nice_view_page_message: nice_view_page_message {
        compatible = "zmk,nice-view-page";
        label = "Message";
        lines = <"Keep Typing!" "ðŸš€ ZMK Rocks!">;
    };

    // Example custom page: logo
    nice_view_page_logo: nice_view_page_logo {
        compatible = "zmk,nice-view-page";
        label = "Logo";
        lines = <"  (â€¢â€¿â€¢)  " "Kyria Split">;
    };
};

// Uncomment this block if using RGB
//&led_strip {
    //chain-length = <6>;
    //chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
//};
 
&studio_unlock

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                  &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
            &kp TAB   &kp A &kp S &kp D &kp F &kp G                                                  &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT            &mo 1   &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                                  &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC       &kp RET &kp SPACE &kp TAB &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

            encoder-bindings = <
                &inc_dec_kp C_VOL_UP C_VOL_DN
            >;
        };
        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2              &trans &trans &trans &trans &trans &trans
            &trans &trans &trans     &bt BT_SEL 3 &bt BT_SEL 4 &trans                    &trans &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
                                 &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
